name: deploy

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        description: 배포할 image name
        type: string
        required: true
      ENV_NAME:
        # github repository Settings > Environments 에 input 으로 전달되는 ENV_NAME 과 동일한 환경이 존재해야
        # 해당 환경에서 배포가 이루어집니다.
        # 또한, 각 환경마다 HOST, USERNAME, PASSWORD, PORT 를 Secret 으로 가지고 있어야 합니다.
        # HOST : 배포 서버의 퍼블릭 ip
        # USERNAME : 배포 서버 접속 계정 이름 (예: root)
        # PASSWORD : 배포 서버 접속 비밀번호
        # PORT : 배포 서버 ssh 접속 포트번호 (예: 22)
        description: 배포 환경 이름
        type: string
        required: true

jobs:
  deploy-to-server:
    environment:
      name: ${{ inputs.ENV_NAME }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Copy script, docker compose files, nginx configuration file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "script/prod.sh,docker-compose-prod.yml,nginx/nginx.conf"
          target: "food-reservation"

      - name: Docker compose up
        uses: appleboy/ssh-action@master
        env:
          IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
          JEP: ${{ secrets.JEP }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: IMAGE_NAME, JEP
          script: |
            export IMAGE_NAME=$IMAGE_NAME
            export JEP=$JEP
            cd food-reservation
            sh script/prod.sh
